<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Revs on</title><link>https://anko9801.github.io/blog/rev/</link><description>Recent content in Revs on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://anko9801.github.io/blog/rev/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://anko9801.github.io/blog/rev/Malware/Analyse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/Malware/Analyse/</guid><description>MITRE ATT&amp;amp;CK Defensive Evasion Obfuscated Files or Information 生の文字列を用いると検出されたり解析されやすいので難読化・暗号化を行う.
エンコーディング XOR カスタムエンコーディング Stack String 暗号化 定数が使われるアルゴリズムの場合、定数から判断 Cipher (AES / DES / TEA / ChaCha20 / &amp;hellip;) Hashing Algorithm (CRC / MD5 / SHA1 / SHA256 / &amp;hellip;) Compression (zlib / aPLib / &amp;hellip;) Windows APIを使う場合、引数などから判断 定数もなく、APIも使われない場合、アルゴリズムを読み解いて判断 RC4 カスタムアルゴリズム YARA rules CAPA rules</description></item><item><title/><link>https://anko9801.github.io/blog/rev/Malware/WindowsInternal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/Malware/WindowsInternal/</guid><description>WinMain
型 ハンガリアン記法
Pxx / LPxx -&amp;gt; * (pointer) char * -&amp;gt; PCHAR Cxx -&amp;gt; const const char * -&amp;gt; LPCSTR Wxx -&amp;gt; ワイド文字: Unicodeのみの文字型 Txx -&amp;gt; マルチバイト文字: UnicodeやSJISなどより一般の文字型 Hxx -&amp;gt; HANDLE Ixx / Nxx -&amp;gt; 整数 Windows Data Types (BaseTsd.</description></item><item><title>Anti debugging</title><link>https://anko9801.github.io/blog/rev/Malware/AntiDebugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/Malware/AntiDebugging/</guid><description>説明 参考 Linux (anti)+ debugging (feneshi.co) Anti Debugging Protection Techniques with Examples (apriorit.com) ウェブアプリをソースごとパクる業者に対する対策 - Qiita Lockbit 3.</description></item><item><title>Detect Virtualization</title><link>https://anko9801.github.io/blog/rev/Malware/DetectVirtualization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/Malware/DetectVirtualization/</guid><description>説明 参考 Linux Detect Virtualization (feneshi.co) LordNoteworthy/al-khaser: Public malware techniques used in the wild: Virtual Machine, Emulation, Debuggers, Sandbox detection.</description></item><item><title>Fuzzing</title><link>https://anko9801.github.io/blog/rev/fuzzing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/fuzzing/</guid><description>説明 参考 オレオレFuzzerもどきを利用してCTFのpwnableを解こう - CTFするぞ (hatenablog.com)
fuzzuf/algorithm_en.md at master · fuzzuf/fuzzuf (github.com) Ricerca Security: Fuzzing Farm #1: fuzzufを使ったGEGLのファジング Ricerca Security: Fuzzing Farm #2: ファザーの性能評価の考え方 Ricerca Security: Fuzzing Farm #3: パッチ解析とPoC開発 Ricerca Security: fuzzuf: Fuzzing Unification Framework Ricerca Security: ARM CoreSightを用いた効率的なBinary-only Fuzzing</description></item><item><title>rev</title><link>https://anko9801.github.io/blog/rev/rev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/rev/</guid><description>データを
idiom 2倍+2をアロケート -&amp;gt; wide char + null終端</description></item><item><title>マルウェア</title><link>https://anko9801.github.io/blog/rev/Malware/Malware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/Malware/Malware/</guid><description>攻撃者の背景 名前 主体 目的 標的 APT(Advanced Persistent Threat) 軍・諜報機関など国家の支援を受けた企業・組織 機密情報の窃取や、対象ネットワークへのアクセス保持 特定の企業や組織 Cybercrime 犯罪者グループ 金銭 不特定多数 Hacktivist 個人やグループの活動化 政治的または社会的な目的達成 活動の対象となる国や組織 RaaS (Ransomware-as-a-Service) マルウェアツール</description></item><item><title>動的解析</title><link>https://anko9801.github.io/blog/rev/DynamicAnalyse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/DynamicAnalyse/</guid><description/></item><item><title>表層解析</title><link>https://anko9801.github.io/blog/rev/SurfaceAnalysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/SurfaceAnalysis/</guid><description> ファイル形式 インジケータ 様々なソフトウェアやツールへの情報展開が容易となる. ファイル全体のハッシュ値 (SHA) 文字列の抽出 strings PE解析 PEファイルのヘッダ領域 ライブラリや関数リソースなど様々な情報を付与される. 内蔵ファイルの取得 Resource Hacker</description></item><item><title>静的解析</title><link>https://anko9801.github.io/blog/rev/StaticAnalyse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anko9801.github.io/blog/rev/StaticAnalyse/</guid><description>Ghidra Rename Variable Retype Variable 配列や構造体にすると嬉しい 文字列: 配列</description></item></channel></rss>